---
title: "Assignment 3"
author: "ALZ Alliance"
format:
    html:
        toc: true
editor: visual
execute: 
  warning: false
---

```{r}
#| echo: false

knitr::opts_chunk$set(
  eval = TRUE,
  message = TRUE,
  warning = TRUE,
  error = TRUE
)
```

```{r}
# Loading the required library
library(tidyverse)
library(janitor)
library(knitr)
library(kableExtra)
```

## Data processing

```{r}
# loading the data 
startup_finance <- read_csv(here::here("data","Finance_and_Insurance.csv")) |> clean_names()
startup_food <- read_csv(here::here("data","Food_and_services.csv")) |> clean_names()
startup_health <- read_csv(here::here("data","Health_Care.csv")) |> clean_names()
startup_it <- read_csv(here::here("data","Information_Sector.csv")) |> clean_names()
startup_manufacture <- read_csv(here::here("data","Manufactures.csv")) |> clean_names()
startup_retail <- read_csv(here::here("data","Retail_Trade.csv")) |>  clean_names()
```

#### Combining dataset into one

```{r}
# combining the dataset into one

startup_combined <- bind_rows(
  startup_finance,
  startup_food,
  startup_health,
  startup_it,
  startup_manufacture,
  startup_retail
)
```

#### Data cleaning

-   Convert years of operation into `start_year` and `end_year`
-   Mutate a col for length of business
-   Convert `how_much_they_raised` into numeric

##### Remove duplicated rows

```{r find duplicated names and remove them}

# Find companies with multiple observations
duplicated_names <- startup_combined |> 
  count(name) |> 
  filter(n > 1) |> 
  pull(name)

# Take a look to pick out which rows to remove
startup_combined |> 
  mutate(id = row_number()) |> 
  filter(name %in% duplicated_names) |> 
  arrange(name)

# Handpicked the rows to remove
removed_rows <- c(264, 89, 175, 306, 66, 259)
startup_combined <- startup_combined |> 
  mutate(id = row_number()) |> 
  filter(!id %in% removed_rows)
```

#### Understanding Dataset

```{r}
# adding table for data description

variable_description <- tibble::tibble(
  Variable = c(
    "name", "sector", "years_of_operation", "what_they_did",
    "how_much_they_raised", "why_they_failed", "takeaway", "giants",
    "no_budget", "competition", "poor_market_fit", "acquisition_stagnation",
    "platform_dependency", "monetization_failure", "niche_limits", "execution_flaws",
    "trend_shifts", "toxicity_trust_issues", "regulatory_pressure", "overhype"
  ),
  Description = c(
    "Name of the startup",
    "Business sector or industry",
    "Number of years the startup operated",
    "Description of what the startup did",
    "Total funds raised before failure (if available)",
    "Primary reason for startup failure",
    "Key takeaway or lesson from the failure",
    "Whether the startup competed with major players",
    "Failed due to budget constraints",
    "Faced tough competition",
    "Did not fit well with market demand",
    "Growth plateaued or stagnated",
    "Depended heavily on external platforms",
    "Could not effectively monetize",
    "Had limited market potential",
    "Poor execution or management issues",
    "Impact of changing industry trends",
    "Trust or toxicity issues in the team",
    "Faced legal or regulatory hurdles",
    "Failure due to excessive hype or unrealistic expectations"
  )
)

# Display as a table
kbl(variable_description, caption = "Variable Descriptions for Startup Combined Dataset") |>
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F)
```

## Executive Summary (Linh)

## Introduction (Linh)

## Methodology (Ayush)

## Results (Zul + Linh)

### Why startups fail (Linh)

### Temporal analysis of start-up failures (Zul)

```{r}

sc_clean <- startup_combined %>%
  mutate(
    # Extract all 4-digit numbers (years) from the string
    years = str_extract_all(years_of_operation, "\\d{4}"),
    # Extract start year as the first year found
    start_year = as.numeric(sapply(years, `[`, 1)),
    # Extract end year as the second year found (if any)
    end_year = as.numeric(sapply(years, `[`, 2)),
    # If end_year is NA (only one year found), set it equal to start_year
    end_year = ifelse(is.na(end_year), start_year, end_year),
    # Calculate year length
    year_length = end_year - start_year
  ) %>%
  select(-years)  # Remove intermediate column
```


```{r}
ggplot(sc_clean, aes(x = sector, y = year_length)) +
  geom_boxplot(fill = "lightgreen") +
  coord_flip() +
  labs(title = "Operation Duration by Industry Sector",
       x = "Industry Sector",
       y = "Years of Operation") +
  theme_minimal()

```


```{r}
top_n <- 30
df_top <- df_ordered %>%
  arrange(desc(year_length)) %>%
  slice(1:top_n)

ggplot(df_top, aes(y = name, color = sector)) +
  geom_segment(aes(x = start_year, xend = end_year, yend = name), size = 3) +
  labs(title = sprintf("Top %d Startups by Operation Duration", top_n),
       x = "Year",
       y = "Startup",
       color = "Industry Sector") +
  theme_minimal() +
  theme(axis.text.y = element_text(size = 8))

```


## Conclusion (Zul + Linh)

### Why startups fail (Linh)

### Temporal analysis of start-up failures (Zul)
